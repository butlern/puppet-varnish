# ************************************************************
# THIS IS AUTO-GENERATED BY PUPPET
# LOCAL MODIFICATION WILL BE OVERWRITTEN BY PUPPET
# ************************************************************
#
# Main vcl configuration. This sets up the following:
# - Backend Health Check Probe
# - Backend Servers
# - Default Director
# - Purge Acls
# - Imports
# - Includes subroutines vcl file

# ************************************************************
# Probe
# ************************************************************
probe backend_health_check {
    .url = "<%= @health_check_url %>";
    .timeout = <%= @health_check_timeout %>;
    .interval = <%= @health_check_interval %>;
    .window = <%= @health_check_window %>;
    .threshold = <%= @health_check_threshold %>;
    .expected_response = <%= @health_check_expected_response %>;
}

# ************************************************************
# Backends
# ************************************************************
<%
  hosts = @backends
  backends = hosts.map do |host|
    if host =~ /:/
      host.split(':')
    else
      [ host, '80' ]
    end
  end
  backends.enum_with_index do |v,i|
-%>
backend backend<%= i %> {
    .host = "<%= v[0] %>";
    .port = "<%= v[1] %>";
    .first_byte_timeout = <%= @first_byte_timeout %>;
    .probe = backend_health_check;
}
<% end -%>

# ************************************************************
# Saint Mode Backend
# https://www.varnish-software.com/static/book/Saving_a_request.html#example-evil-backend-hack
# ************************************************************
backend fail {
    .host = "127.0.0.1";
    .port = "12871";
    .probe = {
        .url = "/fail";
        .initial = 0;
        .interval = 1d;
    }
}

# ************************************************************
# Director
# ************************************************************
director default round-robin {
<% backends.each_index do |i| -%>
    { .backend = backend<%= i %>; }
<% end -%>
}

# ************************************************************
# Purge Acls, host/networks allowed to purge content.
# ************************************************************
acl purge {
<% @purge_acls.each do |acl| -%>
    <%= acl %>;
<% end -%>
}

# ************************************************************
# Vmod Imports
# ************************************************************
import std;
<%
  @vmods.map! do |vmod|
    vmod.gsub(/libvmod-(.+)/, '\1')
  end
-%>
<% @vmods.each do |vmod| -%>
import <%= vmod %>;
<% end -%>

# ************************************************************
# Core Config
# ************************************************************
include "<%= @subs_vcl.split('/').last %>";
